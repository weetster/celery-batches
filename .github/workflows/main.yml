name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "pypy-3.7", "pypy-3.8"]

    steps:
      - uses: actions/checkout@v2

      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade tox tox-gh-actions

      - name: "Run lint"
        if: ${{ matrix.python-version == '3.7' }}
        env:
          TOXENV: "flake8"
        run: "python -m tox"

      - name: "Run tox targets for ${{ matrix.python-version }}"
        env:
          TOX_SKIP_ENV: ".*celerymaster.*"
        run: "python -m tox"

      - name: "Run tox targets for ${{ matrix.python-version }} for celery master"
        env:
          TOX_SKIP_ENV: ".*celery[^m].*"
        run: "python -m tox"
        continue-on-error: true

  integration-tests:
    name: "Latest Python + latest Celery + Redis"
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.x"

      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade tox

      - name: "Run tox targets"
        env:
          TOX_SKIP_ENV: ".*celery[^5][^2].*"
          TEST_BROKER: redis://
          TEST_BACKEND: redis://
        run: "python -m tox"
